[{"/Users/frankm/PersonalProjects/react-flask/frontend/src/index.js":"1","/Users/frankm/PersonalProjects/react-flask/frontend/src/App.js":"2","/Users/frankm/PersonalProjects/react-flask/frontend/src/Tasks/Task.js":"3","/Users/frankm/PersonalProjects/react-flask/frontend/src/Authentication/Login.js":"4","/Users/frankm/PersonalProjects/react-flask/frontend/src/Authentication/Register.js":"5","/Users/frankm/PersonalProjects/react-flask/frontend/src/Homepage/Homepage.js":"6","/Users/frankm/PersonalProjects/react-flask/frontend/src/Menu/Menu.js":"7","/Users/frankm/PersonalProjects/react-flask/frontend/src/Today/Today.js":"8","/Users/frankm/PersonalProjects/react-flask/frontend/src/ListItem/ListItem.js":"9"},{"size":435,"mtime":1689219677637,"results":"10","hashOfConfig":"11"},{"size":1167,"mtime":1689003428923,"results":"12","hashOfConfig":"11"},{"size":911,"mtime":1689036096145,"results":"13","hashOfConfig":"11"},{"size":1563,"mtime":1689104230491,"results":"14","hashOfConfig":"11"},{"size":1561,"mtime":1689104259040,"results":"15","hashOfConfig":"11"},{"size":376,"mtime":1689035837596,"results":"16","hashOfConfig":"11"},{"size":9168,"mtime":1689285031384,"results":"17","hashOfConfig":"11"},{"size":3203,"mtime":1689218388782,"results":"18","hashOfConfig":"11"},{"size":1552,"mtime":1689284462006,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fbiaa2",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/frankm/PersonalProjects/react-flask/frontend/src/index.js",[],["40","41"],"/Users/frankm/PersonalProjects/react-flask/frontend/src/App.js",[],"/Users/frankm/PersonalProjects/react-flask/frontend/src/Tasks/Task.js",[],"/Users/frankm/PersonalProjects/react-flask/frontend/src/Authentication/Login.js",[],"/Users/frankm/PersonalProjects/react-flask/frontend/src/Authentication/Register.js",[],"/Users/frankm/PersonalProjects/react-flask/frontend/src/Homepage/Homepage.js",[],"/Users/frankm/PersonalProjects/react-flask/frontend/src/Menu/Menu.js",["42"],"import \"./Menu.css\";\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { Add, HambergerMenu, SearchNormal1 } from 'iconsax-react';\nimport * as Icon from 'iconsax-react';\nimport { Divider } from '@mui/material';\nimport ListItem from '../ListItem/ListItem';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\n\n\nconst Tag = styled(Paper)(({ theme }) => ({\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n    height: \"auto\",\n    width: \"auto\",\n    display: \"flex\", \n    alignItems: \"center\", \n    justifyContent: \"center\",\n    padding: \"6px 9px\",\n    margin: '4px 2px', // Add margin to the Tag component\n}));\n\nconst TaskItem = ({ iconName, iconVariant, name, number, currentPick }) => {\n    const IconComponent = Icon[iconName]; // Access the icon component dynamically\n    const color = currentPick === \"true\" ? '#DFDFDF' : '#E8E8E8';\n    const numberColor = currentPick === \"true\" ? '#EDEDED' : '#DFDFDF';\n    const boldText = currentPick === \"true\" ? 'bold' : 'normal';\n  return (\n    <Paper elevation={0} style={{height: \"36px\", fontSize: \"14px\", backgroundColor: color }}>\n        <Grid container spacing={0} alignItems=\"center\" style={{ padding: '0px 15px', height: \"100%\"}}>\n            <Grid item xs={2}>\n                \n                <IconComponent variant={iconVariant} color=\"#767676\" />\n            </Grid>\n            <Grid item xs={6} style={{ paddingLeft: '6px', fontWeight: boldText}}>\n                {name}\n            </Grid>\n            <Grid item xs={4} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <div style={{ width: \"23px\", height: \"14px\", marginLeft: 'auto', textAlign: 'center' }}>\n                <Paper elevation={0} style={{ width: \"100%\", height: \"100%\" , fontSize: \"10px\", backgroundColor: numberColor}}>\n                    {number}\n                </Paper>\n                </div>\n            </Grid>\n        </Grid>\n    </Paper>\n  );\n};\n\nfunction Menu( { onLogout } ) {\n    const [listName, setListName] = useState(\"\");\n    const [lists, setLists] = useState([]);\n\n    useEffect(() => {\n        axios.get('/api/lists', {\n            params: {\n                token: localStorage.getItem('token')\n            }\n        })\n            .then(res => {\n                setLists(res.data.lists);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }, []);\n\n    function addList() {\n        console.log(\"addList\");\n        // setLists([...lists,  <ListItem />]);\n    }\n\n    function handlePopupSubmit(event) {\n        axios.post('/api/add/list', {\n            name: listName, \n            token: localStorage.getItem('token')\n        }).then(res => {\n            console.log(res.data);\n            window.location.reload();\n        }).catch(err => {\n            console.log(err);\n        })\n        event.preventDefault();\n    }\n\n    return (\n        <div className=\"Menu unselectable\">\n            \n            <Grid container spacing={0}>\n                <Grid item xs={6} style={{fontWeight: \"medium\", fontSize: \"24px\", marginTop: \"10px\"}} >\n                    Menu\n                </Grid>\n                <Grid item xs={6} style={{display: 'flex', justifyContent: 'flex-end', marginTop: \"10px\"}}>\n                    <HambergerMenu size=\"32\" color=\"#767676\" />\n                </Grid>\n\n                <Grid item xs={12} style={{ height: \"36px\", marginTop: \"16px\", marginBottom: \"26px\"}}>\n                    <Paper\n                        elevation={0}\n                        style={{\n                        height: \"36px\",\n                        border: \"2px #D5D5D5 solid\",\n                        backgroundColor: \"#E8E8E8\",\n                        color: \"#767676\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        padding: \"0 10px\", // Optional: Add some padding around the icon and text\n                        }}\n                    >\n                        <SearchNormal1 size=\"20\" color=\"#767676\" />\n                        <span style={{marginLeft: \"25px\"}}>Search</span>\n                        \n                    </Paper>\n                </Grid>\n\n                {/* TASKS */}\n                <Grid item xs={12}>\n                    <Grid container spacing={0}>\n                        <p className=\"Title\">TASKS</p> \n                        {/* One Task */}\n                        <Grid item xs={12} style={{margin: \"5px 0px 1px 0px\"}}>\n                            <TaskItem iconName=\"Forward\" iconVariant=\"Bold\" name=\"Upcoming\" number=\"2\" />\n                        </Grid>\n\n                        {/* One Task */}\n                        <Grid item xs={12} style={{margin: \"1px 0px\"}}>\n                            <TaskItem currentPick=\"true\" iconName=\"Task\" iconVariant=\"Bold\" name=\"Today\" number=\"4\" />\n                        </Grid>\n\n                        {/* One Task */}\n                        <Grid item xs={12} style={{margin: \"1px 0px\"}}>\n                            <TaskItem iconName=\"Calendar\" iconVariant=\"Bold\" name=\"Calendar\" number=\"8\" />\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item xs={12} style={{margin: \"10px 0px\"}}>\n                    <Divider variant=\"middle\" />\n                </Grid>\n\n                {/* LISTS */}\n                <Grid item xs={12}>\n                    <Grid container spacing={0}>\n                        <p className=\"Title\">LISTS</p> \n                        {/* One Task */}\n                        {lists.length > 0 ? (\n                            lists.map((list) => <ListItem key={list.id} listName={list.title} />)\n                        ) : (\n                            <p>Loading lists...</p>\n                        )}\n\n                        {/* One Task */}\n                        {/* <Grid item xs={12}>\n                            <ListItem color=\"#61CEDC\" name=\"Work\" number=\"6\" />\n                        </Grid> */}\n\n                        {/* One Task */}\n                        {/* <Grid item xs={12}>\n                            <ListItem color=\"#F2C938\" name=\"List 1\" number=\"2\" />\n                        </Grid> */}\n\n                        {/* One Task */}\n                        <Grid item xs={12}>\n                            <Paper elevation={0} style={{height: \"36px\", fontSize: \"14px\", backgroundColor: '#E8E8E8' }}>\n                                    <Popup trigger={\n                                                    <Grid container spacing={0} alignItems=\"center\" style={{ padding: '0px 15px', height: \"100%\"}}>\n                                                        <Grid item xs={2}>\n                                                            <Add />\n                                                        </Grid>\n                                                        <Grid item xs={6} style={{ paddingLeft: '6px' }}>\n                                                            Add List\n                                                        </Grid>\n                                                    </Grid>\n                                    } modal>\n                                        <span> \n                                        <form onSubmit={handlePopupSubmit}>\n                                            <input\n                                                type=\"text\"\n                                                value={listName}\n                                                onChange={(e) => setListName(e.target.value)}\n                                                placeholder=\"Enter list name\"\n                                            />\n                                            <button type=\"submit\">Add List</button>\n                                            </form>\n                                        </span>\n                                    </Popup>\n                                    \n                            </Paper>\n                        </Grid>\n\n                    </Grid>\n                </Grid>\n\n                {/* TAGS */}\n                <Grid item xs={12}>\n                    <Grid container spacing={0}>\n                        <p className=\"Title\">TAGS</p>\n                        <Grid item xs={12} style={{ marginTop: \"6px\" }}>\n                            <div style={{ display: \"flex\", fontSize: \"10px\"}}>\n                                <Tag elevation={0} style={{backgroundColor: \"#C6DEE1\"}}>Square</Tag>\n                                <Tag elevation={0} style={{backgroundColor: \"#F2CFCF\"}}>Name</Tag>\n                                <Tag elevation={0} style={{backgroundColor: \"#DFDFDF\"}}>+ Add Tag</Tag>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <input type=\"button\" value=\"Sign Out\" className=\"AddTaskButton\" onClick={onLogout} />\n            </Grid>\n        </div>\n    );\n};\n\nexport default Menu;","/Users/frankm/PersonalProjects/react-flask/frontend/src/Today/Today.js",[],"/Users/frankm/PersonalProjects/react-flask/frontend/src/ListItem/ListItem.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":73,"column":14,"nodeType":"49","messageId":"50","endLine":73,"endColumn":21},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'addList' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]