[{"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\index.js":"1","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\App.js":"2","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Authentication\\Register.js":"3","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Homepage\\Homepage.js":"4","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Authentication\\Login.js":"5","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\LoginPage\\LoginPage.js":"6","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Today\\Today.js":"7","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Menu\\Menu.js":"8","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Tasks\\Task.js":"9","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\ListItem\\ListItem.js":"10"},{"size":495,"mtime":1689546649414,"results":"11","hashOfConfig":"12"},{"size":1443,"mtime":1689546797029,"results":"13","hashOfConfig":"12"},{"size":1627,"mtime":1689543131071,"results":"14","hashOfConfig":"12"},{"size":392,"mtime":1689543131071,"results":"15","hashOfConfig":"12"},{"size":1628,"mtime":1689543131070,"results":"16","hashOfConfig":"12"},{"size":3018,"mtime":1689546821558,"results":"17","hashOfConfig":"12"},{"size":3312,"mtime":1689543131073,"results":"18","hashOfConfig":"12"},{"size":9386,"mtime":1689543131072,"results":"19","hashOfConfig":"12"},{"size":940,"mtime":1689543131072,"results":"20","hashOfConfig":"12"},{"size":1589,"mtime":1689543131071,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d4xyzj",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\index.js",[],"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\App.js",["44","45","46"],"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Authentication\\Register.js",[],["47","48"],"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Homepage\\Homepage.js",[],"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Authentication\\Login.js",[],"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\LoginPage\\LoginPage.js",["49"],"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Today\\Today.js",[],"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Menu\\Menu.js",["50"],"import \"./Menu.css\";\r\n\r\nimport * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Add, HambergerMenu, SearchNormal1 } from 'iconsax-react';\r\nimport * as Icon from 'iconsax-react';\r\nimport { Divider } from '@mui/material';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\n\r\nconst Tag = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    height: \"auto\",\r\n    width: \"auto\",\r\n    display: \"flex\", \r\n    alignItems: \"center\", \r\n    justifyContent: \"center\",\r\n    padding: \"6px 9px\",\r\n    margin: '4px 2px', // Add margin to the Tag component\r\n}));\r\n\r\nconst TaskItem = ({ iconName, iconVariant, name, number, currentPick }) => {\r\n    const IconComponent = Icon[iconName]; // Access the icon component dynamically\r\n    const color = currentPick === \"true\" ? '#DFDFDF' : '#E8E8E8';\r\n    const numberColor = currentPick === \"true\" ? '#EDEDED' : '#DFDFDF';\r\n    const boldText = currentPick === \"true\" ? 'bold' : 'normal';\r\n  return (\r\n    <Paper elevation={0} style={{height: \"36px\", fontSize: \"14px\", backgroundColor: color }}>\r\n        <Grid container spacing={0} alignItems=\"center\" style={{ padding: '0px 15px', height: \"100%\"}}>\r\n            <Grid item xs={2}>\r\n                \r\n                <IconComponent variant={iconVariant} color=\"#767676\" />\r\n            </Grid>\r\n            <Grid item xs={6} style={{ paddingLeft: '6px', fontWeight: boldText}}>\r\n                {name}\r\n            </Grid>\r\n            <Grid item xs={4} style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <div style={{ width: \"23px\", height: \"14px\", marginLeft: 'auto', textAlign: 'center' }}>\r\n                <Paper elevation={0} style={{ width: \"100%\", height: \"100%\" , fontSize: \"10px\", backgroundColor: numberColor}}>\r\n                    {number}\r\n                </Paper>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nfunction Menu( { onLogout } ) {\r\n    const [listName, setListName] = useState(\"\");\r\n    const [lists, setLists] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/lists', {\r\n            params: {\r\n                token: localStorage.getItem('token')\r\n            }\r\n        })\r\n            .then(res => {\r\n                setLists(res.data.lists);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }, []);\r\n\r\n    function addList() {\r\n        console.log(\"addList\");\r\n        // setLists([...lists,  <ListItem />]);\r\n    }\r\n\r\n    function handlePopupSubmit(event) {\r\n        axios.post('/api/add/list', {\r\n            name: listName, \r\n            token: localStorage.getItem('token')\r\n        }).then(res => {\r\n            console.log(res.data);\r\n            window.location.reload();\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"Menu unselectable\">\r\n            \r\n            <Grid container spacing={0}>\r\n                <Grid item xs={6} style={{fontWeight: \"medium\", fontSize: \"24px\", marginTop: \"10px\"}} >\r\n                    Menu\r\n                </Grid>\r\n                <Grid item xs={6} style={{display: 'flex', justifyContent: 'flex-end', marginTop: \"10px\"}}>\r\n                    <HambergerMenu size=\"32\" color=\"#767676\" />\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{ height: \"36px\", marginTop: \"16px\", marginBottom: \"26px\"}}>\r\n                    <Paper\r\n                        elevation={0}\r\n                        style={{\r\n                        height: \"36px\",\r\n                        border: \"2px #D5D5D5 solid\",\r\n                        backgroundColor: \"#E8E8E8\",\r\n                        color: \"#767676\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        padding: \"0 10px\", // Optional: Add some padding around the icon and text\r\n                        }}\r\n                    >\r\n                        <SearchNormal1 size=\"20\" color=\"#767676\" />\r\n                        <span style={{marginLeft: \"25px\"}}>Search</span>\r\n                        \r\n                    </Paper>\r\n                </Grid>\r\n\r\n                {/* TASKS */}\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={0}>\r\n                        <p className=\"Title\">TASKS</p> \r\n                        {/* One Task */}\r\n                        <Grid item xs={12} style={{margin: \"5px 0px 1px 0px\"}}>\r\n                            <TaskItem iconName=\"Forward\" iconVariant=\"Bold\" name=\"Upcoming\" number=\"2\" />\r\n                        </Grid>\r\n\r\n                        {/* One Task */}\r\n                        <Grid item xs={12} style={{margin: \"1px 0px\"}}>\r\n                            <TaskItem currentPick=\"true\" iconName=\"Task\" iconVariant=\"Bold\" name=\"Today\" number=\"4\" />\r\n                        </Grid>\r\n\r\n                        {/* One Task */}\r\n                        <Grid item xs={12} style={{margin: \"1px 0px\"}}>\r\n                            <TaskItem iconName=\"Calendar\" iconVariant=\"Bold\" name=\"Calendar\" number=\"8\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} style={{margin: \"10px 0px\"}}>\r\n                    <Divider variant=\"middle\" />\r\n                </Grid>\r\n\r\n                {/* LISTS */}\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={0}>\r\n                        <p className=\"Title\">LISTS</p> \r\n                        {/* One Task */}\r\n                        {lists.length > 0 ? (\r\n                            lists.map((list) => <ListItem key={list.id} listName={list.title} />)\r\n                        ) : (\r\n                            <p>Loading lists...</p>\r\n                        )}\r\n\r\n                        {/* One Task */}\r\n                        {/* <Grid item xs={12}>\r\n                            <ListItem color=\"#61CEDC\" name=\"Work\" number=\"6\" />\r\n                        </Grid> */}\r\n\r\n                        {/* One Task */}\r\n                        {/* <Grid item xs={12}>\r\n                            <ListItem color=\"#F2C938\" name=\"List 1\" number=\"2\" />\r\n                        </Grid> */}\r\n\r\n                        {/* One Task */}\r\n                        <Grid item xs={12}>\r\n                            <Paper elevation={0} style={{height: \"36px\", fontSize: \"14px\", backgroundColor: '#E8E8E8' }}>\r\n                                    <Popup trigger={\r\n                                                    <Grid container spacing={0} alignItems=\"center\" style={{ padding: '0px 15px', height: \"100%\"}}>\r\n                                                        <Grid item xs={2}>\r\n                                                            <Add />\r\n                                                        </Grid>\r\n                                                        <Grid item xs={6} style={{ paddingLeft: '6px' }}>\r\n                                                            Add List\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                    } modal>\r\n                                        <span> \r\n                                        <form onSubmit={handlePopupSubmit}>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                value={listName}\r\n                                                onChange={(e) => setListName(e.target.value)}\r\n                                                placeholder=\"Enter list name\"\r\n                                            />\r\n                                            <button type=\"submit\">Add List</button>\r\n                                            </form>\r\n                                        </span>\r\n                                    </Popup>\r\n                                    \r\n                            </Paper>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* TAGS */}\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={0}>\r\n                        <p className=\"Title\">TAGS</p>\r\n                        <Grid item xs={12} style={{ marginTop: \"6px\" }}>\r\n                            <div style={{ display: \"flex\", fontSize: \"10px\"}}>\r\n                                <Tag elevation={0} style={{backgroundColor: \"#C6DEE1\"}}>Square</Tag>\r\n                                <Tag elevation={0} style={{backgroundColor: \"#F2CFCF\"}}>Name</Tag>\r\n                                <Tag elevation={0} style={{backgroundColor: \"#DFDFDF\"}}>+ Add Tag</Tag>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <input type=\"button\" value=\"Sign Out\" className=\"AddTaskButton\" onClick={onLogout} />\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;","C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\Tasks\\Task.js",[],"C:\\Users\\Frank\\Desktop\\goal-wise\\frontend\\src\\ListItem\\ListItem.js",[],{"ruleId":"51","severity":1,"message":"52","line":5,"column":27,"nodeType":"53","messageId":"54","endLine":5,"endColumn":33},{"ruleId":"51","severity":1,"message":"55","line":8,"column":10,"nodeType":"53","messageId":"54","endLine":8,"endColumn":15},{"ruleId":"51","severity":1,"message":"56","line":29,"column":12,"nodeType":"53","messageId":"54","endLine":29,"endColumn":26},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":81,"column":9,"nodeType":"63","endLine":81,"endColumn":53},{"ruleId":"51","severity":1,"message":"64","line":73,"column":14,"nodeType":"53","messageId":"54","endLine":73,"endColumn":21},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'handleRegister' is defined but never used.","no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'addList' is defined but never used.","no-global-assign","no-unsafe-negation"]